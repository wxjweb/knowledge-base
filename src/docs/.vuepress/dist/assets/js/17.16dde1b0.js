(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{374:function(n,t,_){"use strict";_.r(t);var i=_(43),s=Object(i.a)({},(function(){var n=this,t=n.$createElement,_=n._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[_("p",[n._v("给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。")]),n._v(" "),_("p",[n._v('示例 1: 输入: "abcabcbb" 输出: 3 解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。')]),n._v(" "),_("p",[n._v('示例 2: 输入: "bbbbb" 输出: 1 解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。')]),n._v(" "),_("p",[n._v('示例 3: 输入: "pwwkew" 输出: 3 解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。 请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。')]),n._v(" "),_("p",[n._v("解决方案：")]),n._v(" "),_("p",[n._v("遍历字符串，将单个字符放入字符列表中"),_("br"),n._v("\n若新字符不在字符列表中，则计数加1，然后放入字符列表中"),_("br"),n._v("\n若新字符在列表中，则将计数放入计数列表，同时字符列表清空"),_("br"),n._v("\n循环1-3步，遍历完成整个字符串后，取计数列表中的最大值输入")]),n._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[n._v("def length_if_longest_substring():\n    origin_str = input(\"请输入原始字符串：\")\n    char_list = []\n    count_list = []\n    count = 0\n\n    for i in origin_str:\n        if i not in char_list:\n            char_list.append(i)\n            count += 1\n        else:\n            char_list.clear()\n            count_list.append(count)\n            count = 0\n\n            char_list.append(i)\n            count += 1\n    count_list.append(count)\n\n    print(count_list)\n    print(max(count_list))\n\n\nif __name__ == '__main__':\n    length_if_longest_substring()\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);